---
# tasks file for logrotate

- name: Import assert.yml
  ansible.builtin.import_tasks:
    file: assert.yml
  run_once: true
  delegate_to: localhost

- name: Install logrotate
  ansible.builtin.package:
    name: "{{ logrotate_packages }}"
    state: present

- name: Configure logrotate
  ansible.builtin.template:
    src: "{{ logrotate_config_file }}.j2"
    dest: "{{ logrotate_config_directory }}/{{ logrotate_config_file }}"
    mode: "0644"

- name: Generate logrotate.d files
  ansible.builtin.template:
    src: entry.j2
    dest: "{{ logrotate_confd_directory }}/{{ item.name }}"
    mode: "0644"
  loop: "{{ logrotate_entries }}"
  when:
    - logrotate_entries is defined
    - item.state is not defined or item.state != "absent"
  loop_control:
    label: "{{ item.name }}"

- name: Remove logrotate.d files
  ansible.builtin.file:
    path: "{{ logrotate_confd_directory }}/{{ item.name }}"
    state: absent
  loop: "{{ logrotate_entries }}"
  when:
    - logrotate_entries is defined
    - item.state is defined
    - item.state == "absent"
  loop_control:
    label: "{{ item.name }}"

- name: Start logrotate
  ansible.builtin.service:
    name: "{{ logrotate_service }}"
    state: "{{ logrotate_service_state }}"
    enabled: "{{ logrotate_service_enabled }}"
  when:
    - logrotate_service != ""

- name: Enable hourly logrotate
  community.general.ini_file:
    dest: "/etc/systemd/system/{{ logrotate_service }}.d/override.conf"
    section: Timer
    option: OnCalendar
    value: "hourly"
  when:
    - logrotate_service != ""
    - logrotate_frequency == "hourly"

- name: Disable hourly logrotate
  ansible.builtin.file:
    path: "/etc/systemd/system/{{ logrotate_service }}.d/override.conf"
    state: absent
  when:
    - logrotate_service != ""
    - logrotate_frequency != "hourly"
